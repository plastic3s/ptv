


- Install Xcode n Homebrew
$ xcode-select --install
$ /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"


- Add Homebrew to your PATH in /Users/plastic3s/.zprofile:
$ echo 'eval $(/opt/homebrew/bin/brew shellenv)' >> /Users/plastic3s/.zprofile
$  eval $(/opt/homebrew/bin/brew shellenv)

- Optional / If you need to have openssl@1.1 first in your PATH run:
$ echo 'export PATH="/opt/homebrew/opt/openssl@1.1/bin:$PATH"' $ ~/.zshrc

- For compilers to find openssl@1.1 you may need to set:
$ export LDFLAGS="-L/opt/homebrew/opt/openssl@1.1/lib"
$ export CPPFLAGS="-I/opt/homebrew/opt/openssl@1.1/include"


- Install apache from home-brew
$ sudo apachectl stop
$ sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist 2>/dev/null

$ brew install httpd

- DocumentRoot is /opt/homebrew/var/www.
- To have launchd start httpd now and restart at login:
$ brew services start httpd
- Or, if you don't want/need a background service you can just run:$ apachectl start

- check to ensure the server is up
$ ps -aef | grep httpd


- Apache is controlled via the brew services command
$ brew services stop httpd
$ brew services start httpd
$ brew services restart httpd

- Using the default TextEditor to edit Apache config file
$ open -e /opt/homebrew/etc/httpd/httpd.conf


- Find the line that says Listen 8080 and change it to 80
- enable mod_rewrite which is commented out by default
- #ServerName www.example.com:8080 Uncomment and replace it with: ServerName localhost
- save and close
- Restart Apache
$ brew services restart httpd

- Install php with brew
$ brew install php

- To have launchd start php now and restart at login:
$ brew services start php

-To enable PHP in Apache add the following to httpd.conf and restart Apache:
    LoadModule php_module /opt/homebrew/opt/php/lib/httpd/modules/libphp.so

    <FilesMatch \.php$>
        SetHandler application/x-httpd-php
    </FilesMatch>

Finally, check DirectoryIndex includes index.php
    DirectoryIndex index.php index.html

The php.ini and php-fpm.ini file can be found in:
    /opt/homebrew/etc/php/8.0/


- Using the default TextEditor to edit Apache config file
$ open -e /opt/homebrew/etc/httpd/httpd.conf

- save and close
- Restart Apache
$ brew services restart httpd

- Create phpinfo file in HomeBrew apache doc root 
echo '<?php phpinfo(); ?>' >> /opt/homebrew/var/www/info.php

- Install MySQL
$ brew install mysql

- Start MySQL
$ brew services start mysql

- Secure MySQL
$ mysql_secure_installation

- Log in mysql with root n change password to use mysql_native_password
$ mysql -uroot -p
$ alter user 'root'@'localhost' identified with mysql_native_password by 'yourpassword';
$ flush privileges;
$ exit

- Install NVM
$ brew install nvm
$ mkdir ~/.nvm
$ export NVM_DIR="$HOME/.nvm"
$ source $(brew --prefix nvm)/nvm.sh

- Add two lines in .zprofile : export NVM_DIR="$HOME/.nvm" & source $(brew --prefix nvm)/nvm.sh
$ echo 'export NVM_DIR="$HOME/.nvm"' >> /Users/plastic3s/.zprofile
$ echo 'source $(brew --prefix nvm)/nvm.sh' >> /Users/plastic3s/.zprofile

- Install node using NVM
$ nvm install node
- wait 4 long time


$ sudo mkdir /usr/local/bin
- Install composer
$ php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
$ php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
$ sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
$ php -r "unlink('composer-setup.php');"

$ sudo chown -R $USER ~/.composer/
$ echo 'export PATH="$HOME/.composer/vendor/bin:$PATH"' $ /Users/plastic3s/.zshrc

- Install Laravel installer
$ composer global require "laravel/installer"





